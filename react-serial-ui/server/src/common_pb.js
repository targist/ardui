// source: common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.targist.ardui.proto.AnalogWrite', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.DigitalWrite', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.GenericArduinoProgram', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.Instruction', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.Instruction.ActionCase', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.Level', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.LoopScript', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.Mode', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.SetPinMode', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.SetupScript', null, global);
goog.exportSymbol('proto.com.targist.ardui.proto.Sleep', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.targist.ardui.proto.GenericArduinoProgram = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.targist.ardui.proto.GenericArduinoProgram, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.targist.ardui.proto.GenericArduinoProgram.displayName = 'proto.com.targist.ardui.proto.GenericArduinoProgram';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.targist.ardui.proto.SetupScript = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.targist.ardui.proto.SetupScript.repeatedFields_, null);
};
goog.inherits(proto.com.targist.ardui.proto.SetupScript, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.targist.ardui.proto.SetupScript.displayName = 'proto.com.targist.ardui.proto.SetupScript';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.targist.ardui.proto.LoopScript = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.targist.ardui.proto.LoopScript.repeatedFields_, null);
};
goog.inherits(proto.com.targist.ardui.proto.LoopScript, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.targist.ardui.proto.LoopScript.displayName = 'proto.com.targist.ardui.proto.LoopScript';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.targist.ardui.proto.Instruction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.targist.ardui.proto.Instruction.oneofGroups_);
};
goog.inherits(proto.com.targist.ardui.proto.Instruction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.targist.ardui.proto.Instruction.displayName = 'proto.com.targist.ardui.proto.Instruction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.targist.ardui.proto.SetPinMode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.targist.ardui.proto.SetPinMode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.targist.ardui.proto.SetPinMode.displayName = 'proto.com.targist.ardui.proto.SetPinMode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.targist.ardui.proto.DigitalWrite = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.targist.ardui.proto.DigitalWrite, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.targist.ardui.proto.DigitalWrite.displayName = 'proto.com.targist.ardui.proto.DigitalWrite';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.targist.ardui.proto.AnalogWrite = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.targist.ardui.proto.AnalogWrite, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.targist.ardui.proto.AnalogWrite.displayName = 'proto.com.targist.ardui.proto.AnalogWrite';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.targist.ardui.proto.Sleep = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.targist.ardui.proto.Sleep, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.targist.ardui.proto.Sleep.displayName = 'proto.com.targist.ardui.proto.Sleep';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.toObject = function(opt_includeInstance) {
  return proto.com.targist.ardui.proto.GenericArduinoProgram.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.targist.ardui.proto.GenericArduinoProgram} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.toObject = function(includeInstance, msg) {
  var f, obj = {
    setup: (f = msg.getSetup()) && proto.com.targist.ardui.proto.SetupScript.toObject(includeInstance, f),
    loop: (f = msg.getLoop()) && proto.com.targist.ardui.proto.LoopScript.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.targist.ardui.proto.GenericArduinoProgram}
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.targist.ardui.proto.GenericArduinoProgram;
  return proto.com.targist.ardui.proto.GenericArduinoProgram.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.targist.ardui.proto.GenericArduinoProgram} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.targist.ardui.proto.GenericArduinoProgram}
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.targist.ardui.proto.SetupScript;
      reader.readMessage(value,proto.com.targist.ardui.proto.SetupScript.deserializeBinaryFromReader);
      msg.setSetup(value);
      break;
    case 2:
      var value = new proto.com.targist.ardui.proto.LoopScript;
      reader.readMessage(value,proto.com.targist.ardui.proto.LoopScript.deserializeBinaryFromReader);
      msg.setLoop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.targist.ardui.proto.GenericArduinoProgram.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.targist.ardui.proto.GenericArduinoProgram} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.targist.ardui.proto.SetupScript.serializeBinaryToWriter
    );
  }
  f = message.getLoop();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.targist.ardui.proto.LoopScript.serializeBinaryToWriter
    );
  }
};


/**
 * optional SetupScript setup = 1;
 * @return {?proto.com.targist.ardui.proto.SetupScript}
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.getSetup = function() {
  return /** @type{?proto.com.targist.ardui.proto.SetupScript} */ (
    jspb.Message.getWrapperField(this, proto.com.targist.ardui.proto.SetupScript, 1));
};


/**
 * @param {?proto.com.targist.ardui.proto.SetupScript|undefined} value
 * @return {!proto.com.targist.ardui.proto.GenericArduinoProgram} returns this
*/
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.setSetup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.targist.ardui.proto.GenericArduinoProgram} returns this
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.clearSetup = function() {
  return this.setSetup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.hasSetup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LoopScript loop = 2;
 * @return {?proto.com.targist.ardui.proto.LoopScript}
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.getLoop = function() {
  return /** @type{?proto.com.targist.ardui.proto.LoopScript} */ (
    jspb.Message.getWrapperField(this, proto.com.targist.ardui.proto.LoopScript, 2));
};


/**
 * @param {?proto.com.targist.ardui.proto.LoopScript|undefined} value
 * @return {!proto.com.targist.ardui.proto.GenericArduinoProgram} returns this
*/
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.setLoop = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.targist.ardui.proto.GenericArduinoProgram} returns this
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.clearLoop = function() {
  return this.setLoop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.targist.ardui.proto.GenericArduinoProgram.prototype.hasLoop = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.targist.ardui.proto.SetupScript.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.targist.ardui.proto.SetupScript.prototype.toObject = function(opt_includeInstance) {
  return proto.com.targist.ardui.proto.SetupScript.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.targist.ardui.proto.SetupScript} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.SetupScript.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionsList: jspb.Message.toObjectList(msg.getInstructionsList(),
    proto.com.targist.ardui.proto.Instruction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.targist.ardui.proto.SetupScript}
 */
proto.com.targist.ardui.proto.SetupScript.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.targist.ardui.proto.SetupScript;
  return proto.com.targist.ardui.proto.SetupScript.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.targist.ardui.proto.SetupScript} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.targist.ardui.proto.SetupScript}
 */
proto.com.targist.ardui.proto.SetupScript.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.targist.ardui.proto.Instruction;
      reader.readMessage(value,proto.com.targist.ardui.proto.Instruction.deserializeBinaryFromReader);
      msg.addInstructions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.targist.ardui.proto.SetupScript.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.targist.ardui.proto.SetupScript.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.targist.ardui.proto.SetupScript} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.SetupScript.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstructionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.targist.ardui.proto.Instruction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Instruction instructions = 1;
 * @return {!Array<!proto.com.targist.ardui.proto.Instruction>}
 */
proto.com.targist.ardui.proto.SetupScript.prototype.getInstructionsList = function() {
  return /** @type{!Array<!proto.com.targist.ardui.proto.Instruction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.targist.ardui.proto.Instruction, 1));
};


/**
 * @param {!Array<!proto.com.targist.ardui.proto.Instruction>} value
 * @return {!proto.com.targist.ardui.proto.SetupScript} returns this
*/
proto.com.targist.ardui.proto.SetupScript.prototype.setInstructionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.targist.ardui.proto.Instruction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.targist.ardui.proto.Instruction}
 */
proto.com.targist.ardui.proto.SetupScript.prototype.addInstructions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.targist.ardui.proto.Instruction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.targist.ardui.proto.SetupScript} returns this
 */
proto.com.targist.ardui.proto.SetupScript.prototype.clearInstructionsList = function() {
  return this.setInstructionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.targist.ardui.proto.LoopScript.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.targist.ardui.proto.LoopScript.prototype.toObject = function(opt_includeInstance) {
  return proto.com.targist.ardui.proto.LoopScript.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.targist.ardui.proto.LoopScript} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.LoopScript.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionsList: jspb.Message.toObjectList(msg.getInstructionsList(),
    proto.com.targist.ardui.proto.Instruction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.targist.ardui.proto.LoopScript}
 */
proto.com.targist.ardui.proto.LoopScript.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.targist.ardui.proto.LoopScript;
  return proto.com.targist.ardui.proto.LoopScript.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.targist.ardui.proto.LoopScript} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.targist.ardui.proto.LoopScript}
 */
proto.com.targist.ardui.proto.LoopScript.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.targist.ardui.proto.Instruction;
      reader.readMessage(value,proto.com.targist.ardui.proto.Instruction.deserializeBinaryFromReader);
      msg.addInstructions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.targist.ardui.proto.LoopScript.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.targist.ardui.proto.LoopScript.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.targist.ardui.proto.LoopScript} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.LoopScript.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstructionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.targist.ardui.proto.Instruction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Instruction instructions = 1;
 * @return {!Array<!proto.com.targist.ardui.proto.Instruction>}
 */
proto.com.targist.ardui.proto.LoopScript.prototype.getInstructionsList = function() {
  return /** @type{!Array<!proto.com.targist.ardui.proto.Instruction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.targist.ardui.proto.Instruction, 1));
};


/**
 * @param {!Array<!proto.com.targist.ardui.proto.Instruction>} value
 * @return {!proto.com.targist.ardui.proto.LoopScript} returns this
*/
proto.com.targist.ardui.proto.LoopScript.prototype.setInstructionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.targist.ardui.proto.Instruction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.targist.ardui.proto.Instruction}
 */
proto.com.targist.ardui.proto.LoopScript.prototype.addInstructions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.targist.ardui.proto.Instruction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.targist.ardui.proto.LoopScript} returns this
 */
proto.com.targist.ardui.proto.LoopScript.prototype.clearInstructionsList = function() {
  return this.setInstructionsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.targist.ardui.proto.Instruction.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.com.targist.ardui.proto.Instruction.ActionCase = {
  ACTION_NOT_SET: 0,
  SETPINMODE: 1,
  DIGITALWRITE: 2,
  ANALOGWRITE: 3,
  SLEEP: 4
};

/**
 * @return {proto.com.targist.ardui.proto.Instruction.ActionCase}
 */
proto.com.targist.ardui.proto.Instruction.prototype.getActionCase = function() {
  return /** @type {proto.com.targist.ardui.proto.Instruction.ActionCase} */(jspb.Message.computeOneofCase(this, proto.com.targist.ardui.proto.Instruction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.targist.ardui.proto.Instruction.prototype.toObject = function(opt_includeInstance) {
  return proto.com.targist.ardui.proto.Instruction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.targist.ardui.proto.Instruction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.Instruction.toObject = function(includeInstance, msg) {
  var f, obj = {
    setpinmode: (f = msg.getSetpinmode()) && proto.com.targist.ardui.proto.SetPinMode.toObject(includeInstance, f),
    digitalwrite: (f = msg.getDigitalwrite()) && proto.com.targist.ardui.proto.DigitalWrite.toObject(includeInstance, f),
    analogwrite: (f = msg.getAnalogwrite()) && proto.com.targist.ardui.proto.AnalogWrite.toObject(includeInstance, f),
    sleep: (f = msg.getSleep()) && proto.com.targist.ardui.proto.Sleep.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.targist.ardui.proto.Instruction}
 */
proto.com.targist.ardui.proto.Instruction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.targist.ardui.proto.Instruction;
  return proto.com.targist.ardui.proto.Instruction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.targist.ardui.proto.Instruction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.targist.ardui.proto.Instruction}
 */
proto.com.targist.ardui.proto.Instruction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.targist.ardui.proto.SetPinMode;
      reader.readMessage(value,proto.com.targist.ardui.proto.SetPinMode.deserializeBinaryFromReader);
      msg.setSetpinmode(value);
      break;
    case 2:
      var value = new proto.com.targist.ardui.proto.DigitalWrite;
      reader.readMessage(value,proto.com.targist.ardui.proto.DigitalWrite.deserializeBinaryFromReader);
      msg.setDigitalwrite(value);
      break;
    case 3:
      var value = new proto.com.targist.ardui.proto.AnalogWrite;
      reader.readMessage(value,proto.com.targist.ardui.proto.AnalogWrite.deserializeBinaryFromReader);
      msg.setAnalogwrite(value);
      break;
    case 4:
      var value = new proto.com.targist.ardui.proto.Sleep;
      reader.readMessage(value,proto.com.targist.ardui.proto.Sleep.deserializeBinaryFromReader);
      msg.setSleep(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.targist.ardui.proto.Instruction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.targist.ardui.proto.Instruction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.targist.ardui.proto.Instruction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.Instruction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetpinmode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.targist.ardui.proto.SetPinMode.serializeBinaryToWriter
    );
  }
  f = message.getDigitalwrite();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.targist.ardui.proto.DigitalWrite.serializeBinaryToWriter
    );
  }
  f = message.getAnalogwrite();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.targist.ardui.proto.AnalogWrite.serializeBinaryToWriter
    );
  }
  f = message.getSleep();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.com.targist.ardui.proto.Sleep.serializeBinaryToWriter
    );
  }
};


/**
 * optional SetPinMode setPinMode = 1;
 * @return {?proto.com.targist.ardui.proto.SetPinMode}
 */
proto.com.targist.ardui.proto.Instruction.prototype.getSetpinmode = function() {
  return /** @type{?proto.com.targist.ardui.proto.SetPinMode} */ (
    jspb.Message.getWrapperField(this, proto.com.targist.ardui.proto.SetPinMode, 1));
};


/**
 * @param {?proto.com.targist.ardui.proto.SetPinMode|undefined} value
 * @return {!proto.com.targist.ardui.proto.Instruction} returns this
*/
proto.com.targist.ardui.proto.Instruction.prototype.setSetpinmode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.com.targist.ardui.proto.Instruction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.targist.ardui.proto.Instruction} returns this
 */
proto.com.targist.ardui.proto.Instruction.prototype.clearSetpinmode = function() {
  return this.setSetpinmode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.targist.ardui.proto.Instruction.prototype.hasSetpinmode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DigitalWrite digitalWrite = 2;
 * @return {?proto.com.targist.ardui.proto.DigitalWrite}
 */
proto.com.targist.ardui.proto.Instruction.prototype.getDigitalwrite = function() {
  return /** @type{?proto.com.targist.ardui.proto.DigitalWrite} */ (
    jspb.Message.getWrapperField(this, proto.com.targist.ardui.proto.DigitalWrite, 2));
};


/**
 * @param {?proto.com.targist.ardui.proto.DigitalWrite|undefined} value
 * @return {!proto.com.targist.ardui.proto.Instruction} returns this
*/
proto.com.targist.ardui.proto.Instruction.prototype.setDigitalwrite = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.com.targist.ardui.proto.Instruction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.targist.ardui.proto.Instruction} returns this
 */
proto.com.targist.ardui.proto.Instruction.prototype.clearDigitalwrite = function() {
  return this.setDigitalwrite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.targist.ardui.proto.Instruction.prototype.hasDigitalwrite = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AnalogWrite analogWrite = 3;
 * @return {?proto.com.targist.ardui.proto.AnalogWrite}
 */
proto.com.targist.ardui.proto.Instruction.prototype.getAnalogwrite = function() {
  return /** @type{?proto.com.targist.ardui.proto.AnalogWrite} */ (
    jspb.Message.getWrapperField(this, proto.com.targist.ardui.proto.AnalogWrite, 3));
};


/**
 * @param {?proto.com.targist.ardui.proto.AnalogWrite|undefined} value
 * @return {!proto.com.targist.ardui.proto.Instruction} returns this
*/
proto.com.targist.ardui.proto.Instruction.prototype.setAnalogwrite = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.com.targist.ardui.proto.Instruction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.targist.ardui.proto.Instruction} returns this
 */
proto.com.targist.ardui.proto.Instruction.prototype.clearAnalogwrite = function() {
  return this.setAnalogwrite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.targist.ardui.proto.Instruction.prototype.hasAnalogwrite = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Sleep sleep = 4;
 * @return {?proto.com.targist.ardui.proto.Sleep}
 */
proto.com.targist.ardui.proto.Instruction.prototype.getSleep = function() {
  return /** @type{?proto.com.targist.ardui.proto.Sleep} */ (
    jspb.Message.getWrapperField(this, proto.com.targist.ardui.proto.Sleep, 4));
};


/**
 * @param {?proto.com.targist.ardui.proto.Sleep|undefined} value
 * @return {!proto.com.targist.ardui.proto.Instruction} returns this
*/
proto.com.targist.ardui.proto.Instruction.prototype.setSleep = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.com.targist.ardui.proto.Instruction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.targist.ardui.proto.Instruction} returns this
 */
proto.com.targist.ardui.proto.Instruction.prototype.clearSleep = function() {
  return this.setSleep(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.targist.ardui.proto.Instruction.prototype.hasSleep = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.targist.ardui.proto.SetPinMode.prototype.toObject = function(opt_includeInstance) {
  return proto.com.targist.ardui.proto.SetPinMode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.targist.ardui.proto.SetPinMode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.SetPinMode.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pin: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.targist.ardui.proto.SetPinMode}
 */
proto.com.targist.ardui.proto.SetPinMode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.targist.ardui.proto.SetPinMode;
  return proto.com.targist.ardui.proto.SetPinMode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.targist.ardui.proto.SetPinMode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.targist.ardui.proto.SetPinMode}
 */
proto.com.targist.ardui.proto.SetPinMode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.targist.ardui.proto.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.targist.ardui.proto.SetPinMode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.targist.ardui.proto.SetPinMode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.targist.ardui.proto.SetPinMode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.SetPinMode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPin();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional Mode mode = 1;
 * @return {!proto.com.targist.ardui.proto.Mode}
 */
proto.com.targist.ardui.proto.SetPinMode.prototype.getMode = function() {
  return /** @type {!proto.com.targist.ardui.proto.Mode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.com.targist.ardui.proto.Mode} value
 * @return {!proto.com.targist.ardui.proto.SetPinMode} returns this
 */
proto.com.targist.ardui.proto.SetPinMode.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 pin = 2;
 * @return {number}
 */
proto.com.targist.ardui.proto.SetPinMode.prototype.getPin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.targist.ardui.proto.SetPinMode} returns this
 */
proto.com.targist.ardui.proto.SetPinMode.prototype.setPin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.targist.ardui.proto.DigitalWrite.prototype.toObject = function(opt_includeInstance) {
  return proto.com.targist.ardui.proto.DigitalWrite.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.targist.ardui.proto.DigitalWrite} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.DigitalWrite.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pin: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.targist.ardui.proto.DigitalWrite}
 */
proto.com.targist.ardui.proto.DigitalWrite.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.targist.ardui.proto.DigitalWrite;
  return proto.com.targist.ardui.proto.DigitalWrite.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.targist.ardui.proto.DigitalWrite} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.targist.ardui.proto.DigitalWrite}
 */
proto.com.targist.ardui.proto.DigitalWrite.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.targist.ardui.proto.Level} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.targist.ardui.proto.DigitalWrite.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.targist.ardui.proto.DigitalWrite.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.targist.ardui.proto.DigitalWrite} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.DigitalWrite.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPin();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional Level level = 1;
 * @return {!proto.com.targist.ardui.proto.Level}
 */
proto.com.targist.ardui.proto.DigitalWrite.prototype.getLevel = function() {
  return /** @type {!proto.com.targist.ardui.proto.Level} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.com.targist.ardui.proto.Level} value
 * @return {!proto.com.targist.ardui.proto.DigitalWrite} returns this
 */
proto.com.targist.ardui.proto.DigitalWrite.prototype.setLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 pin = 2;
 * @return {number}
 */
proto.com.targist.ardui.proto.DigitalWrite.prototype.getPin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.targist.ardui.proto.DigitalWrite} returns this
 */
proto.com.targist.ardui.proto.DigitalWrite.prototype.setPin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.targist.ardui.proto.AnalogWrite.prototype.toObject = function(opt_includeInstance) {
  return proto.com.targist.ardui.proto.AnalogWrite.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.targist.ardui.proto.AnalogWrite} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.AnalogWrite.toObject = function(includeInstance, msg) {
  var f, obj = {
    pin: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.targist.ardui.proto.AnalogWrite}
 */
proto.com.targist.ardui.proto.AnalogWrite.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.targist.ardui.proto.AnalogWrite;
  return proto.com.targist.ardui.proto.AnalogWrite.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.targist.ardui.proto.AnalogWrite} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.targist.ardui.proto.AnalogWrite}
 */
proto.com.targist.ardui.proto.AnalogWrite.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.targist.ardui.proto.AnalogWrite.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.targist.ardui.proto.AnalogWrite.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.targist.ardui.proto.AnalogWrite} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.AnalogWrite.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPin();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 pin = 1;
 * @return {number}
 */
proto.com.targist.ardui.proto.AnalogWrite.prototype.getPin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.targist.ardui.proto.AnalogWrite} returns this
 */
proto.com.targist.ardui.proto.AnalogWrite.prototype.setPin = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 value = 2;
 * @return {number}
 */
proto.com.targist.ardui.proto.AnalogWrite.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.targist.ardui.proto.AnalogWrite} returns this
 */
proto.com.targist.ardui.proto.AnalogWrite.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.targist.ardui.proto.Sleep.prototype.toObject = function(opt_includeInstance) {
  return proto.com.targist.ardui.proto.Sleep.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.targist.ardui.proto.Sleep} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.Sleep.toObject = function(includeInstance, msg) {
  var f, obj = {
    duration: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.targist.ardui.proto.Sleep}
 */
proto.com.targist.ardui.proto.Sleep.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.targist.ardui.proto.Sleep;
  return proto.com.targist.ardui.proto.Sleep.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.targist.ardui.proto.Sleep} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.targist.ardui.proto.Sleep}
 */
proto.com.targist.ardui.proto.Sleep.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.targist.ardui.proto.Sleep.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.targist.ardui.proto.Sleep.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.targist.ardui.proto.Sleep} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.targist.ardui.proto.Sleep.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDuration();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 duration = 1;
 * @return {number}
 */
proto.com.targist.ardui.proto.Sleep.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.targist.ardui.proto.Sleep} returns this
 */
proto.com.targist.ardui.proto.Sleep.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.com.targist.ardui.proto.Mode = {
  INPUT: 0,
  OUTPUT: 1,
  INPUT_PULLUP: 2
};

/**
 * @enum {number}
 */
proto.com.targist.ardui.proto.Level = {
  HIGH: 0,
  LOW: 1
};

goog.object.extend(exports, proto.com.targist.ardui.proto);
